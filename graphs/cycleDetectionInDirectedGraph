#include<iostream>
#include"bits/stdc++.h"
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
#include<climits>
// #define int long long
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
const int N=1e5+2,MOD=1e9+7;
bool vis[N];
// vector<int> adj[N];
using namespace std;
// representation of graphs
vi adj[N];
bool isCycle(int src,vector<vector<int>> &adj,vector<bool> &visited,vector<int> &stack){
//  visited[src]=true;
    stack[src]=true;
    if(!visited[src]){
        visited[src]=true;
        for(auto i:adj[src]){
            if(stack[i])
                return true;
            if(!visited[i] && isCycle(i,adj,visited,stack))
                return true;
        }
    }
    stack[src]=false;
    return false;
}
int32_t main(){
    int n,m;
    cin>>n>>m;
    vector<vector<int>> adj(n);
    for(int i=0;i<n;i++){
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
//      adj[v].push_back(u);
    }
    bool cycle=false;
    vector<int> stack(n,0);
    vector<bool> visited(n,false);
    for(int i=0;i<n;i++){
        if(!visited[i] && isCycle(i,adj,visited,stack))
            cycle=true;
    }
    if(cycle)
        cout<<"cycle is present :)"<<endl;
    else
        cout<<"cycle is not present :("<<endl;
    return 0;
}
