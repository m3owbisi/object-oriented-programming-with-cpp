#include<iostream>
#include"bits/stdc++.h"
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
#include<climits>
// #define int long long
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
const int N=1e5+2,MOD=1e9+7;
using namespace std;
// representation of graphs
vi adj[N];
signed main(){
    int n,m;
    cin>>n>>m;
    vvi adjm(n+1,vi(n+1,0));
    rep(i,0,m){
        int x,y;
        cin>>x>>y;
        adjm[x][y]=1;
        adjm[y][x]=1;
    }
    cout<<"adjacency matrix of above graph is given by: "<<endl;
    rep(i,1,n+1){
        rep(j,1,n+1)
            cout<<adjm[i][j]<<" ";
        cout<<endl;
    }
    if(adjm[3][7]==1)
        cout<<"there is an edge between"<<endl;
    else
        cout<<"there is no edge in between"<<endl;
    cout<<endl;
    cin>>n>>m;
    rep(i,0,m){
        int x,y;
        cin>>x>>y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    cout<<"adjacency list of the above graph is given by: "<<endl;
    rep(i,1,n+1){
        cout<<i<<" -> ";
        vector<int>::iterator it;
        for(it=adj[i].begin();it!=adj[i].end();it++)
            cout<<*it<<" ";
//        for(int x:adj[i])
//              cout<<x<<" ";
        cout<<endl;
    }
    return 0;
}
