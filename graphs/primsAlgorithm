#include<iostream>
#include"bits/stdc++.h"
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
#include<climits>
// #define int long long
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
//const int N=1e5+2,MOD=1e9+7;
//bool vis[N];
// vector<int> adj[N];
using namespace std;
// representation of graphs
//vi adj[N];
//vector<bool> vis;
//vector<vector<int>> adj;
//vector<int> components;
//vector<int> col;
//bool bipart;
//const int N=1e5+6;
//vector<int> parent(N);
//vector<int> sz(N);
int n,m;
const int N=1e5+3;
vector<vector<int>> g[N];
int cost=0;
vector<int> dist(N),parent(N);
const int INF=1e9;
vector<bool> vis(N);
void primsMST(int source){
    for(int i=1;i<n;i++)
        dist[i]=INF;
    set<vector<int>> s;
    dist[source]=0;
    s.insert({0,source});
    while(!s.empty()){
        auto x=*(s.begin());
        s.erase(x);
        vis[x[1]]=true;
        int u=x[1];
        int v=parent[x[1]];
        int w=x[0];
        cout<<u<<" "<<v<<" "<<w<<endl;
        cost+=w;
        for(auto it:g[x[1]]){
            if(vis[it[0]])
                continue;
            if(dist[it[0]]>it[1]){
                s.erase({dist[it[0]],it[0]});
                dist[it[0]]=it[1];
                s.insert({dist[it[0]],it[0]});
                parent[it[0]]=x[1];
            }
        }
    }
}
int32_t main(){
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int u,v,w;
        cin>>u>>v>>w;
        g[u].push_back({v,w});
        g[v].push_back({u,w});
    }
    primsMST(0);
    cout<<cost<<endl;
    return 0;
}
