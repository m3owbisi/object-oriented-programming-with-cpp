#include<iostream>
#include"bits/stdc++.h"
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
#include<climits>
// #define int long long
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
//const int N=1e5+2,MOD=1e9+7;
//bool vis[N];
// vector<int> adj[N];
using namespace std;
// representation of graphs
//vi adj[N];
//vector<bool> vis;
//vector<vector<int>> adj;
//vector<int> components;
//vector<int> col;
//bool bipart;
//const int N=1e5+6;
//vector<int> parent(N);
//vector<int> sz(N);
//int n,m;
//const int N=1e5+3;
//vector<vector<int>> g[N];
//int cost=0;
//vector<int> dist(N),parent(N);
const int INF=1e9;
//vector<bool> vis(N);
//const int inf=1e7;
int32_t main(){
    vector<vector<int>> graph={
        {0,5,INF,10},
        {INF,0,3,INF},
        {INF,INF,0,1},
        {INF,INF,INF,0}
    };
    int n=graph.size();
    vector<vector<int>> dist=graph;
    for(int k=0;k<n;k++){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(dist[i][k]+dist[k][j]<dist[i][j])
                    dist[i][j]=dist[i][k]+dist[k][j];
            }
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(dist[i][j]==INF)
                cout<<"INF ";
            else
                cout<<dist[i][j]<<" ";
        }
        cout<<"\n";
    }
    // 1,3
    cout<<dist[1][3];
    return 0;
}
