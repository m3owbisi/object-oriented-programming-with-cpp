#include<iostream>
#include"bits/stdc++.h"
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
#include<climits>
// #define int long long
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
const int N=1e5+2,MOD=1e9+7;
bool vis[N];
// vector<int> adj[N];
using namespace std;
// representation of graphs
vi adj[N];
void dfs(int node){
    // preorder
    vis[node]=1;
    cout<<node<<" ";
    // inorder
    vector<int>::iterator it;
    for(it=adj[node].begin();it!=adj[node].end();it++){
        if(vis[*it]);
        else
            dfs(*it);
    }
    // postorder
}
signed main(){
    int n,m;
    cin>>n>>m;
    for(int i=0;i<m;i++)
        vis[i]=false;
    int x, y;
    for(int i=0;i<m;i++){
        cin>>x>>y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    dfs(1);
    return 0;
}
