#include<iostream>
#include<algorithm>
#include<string>
#include<stack>
#include<set>
#include<vector>
#include<map>
#include<unordered_map>
#include<queue>
// #define int long long
#define vi vector<int>
#define pii pair<int,int>
#define vii vector<pii>
#define rep(i,a,b) for(int i=a;i<b;i++)
#define ff first
#define ss second
#define setbits(x) builtin_popcount(x)
using namespace std;
struct node{
    int key;
    node *left,*right;
};
node *newNode(int key){
    node *Node=new node;
    Node->key=key;
    Node->left=Node->right=NULL;
    return Node;
}
void getVerticalOrder(node *root,int hdis,map<int,vi> &mp){
    if(root==NULL){
        return;
    }
    mp[hdis].push_back(root->key);
    getVerticalOrder(root->left,hdis-1,mp);
    getVerticalOrder(root->right,hdis+1,mp);
}
signed main(){
    node *root=newNode(10);
    root->left=newNode(7);
    root->right=newNode(4);
    root->left->left=newNode(3);
    root->left->right=newNode(11);
    root->right->left=newNode(14);
    root->right->right=newNode(6);
    map<int,vector<int>> mp;
    int hdis=0;
    getVerticalOrder(root,hdis,mp);
    map<int,vi>::iterator it;
    for (it=mp.begin();it!=mp.end();it++){
        for(int i=0;i<(it->ss).size();i++){
            cout<<(it->ss)[i]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
