#include<bits/stdc++.h>
using namespace std;
class trieNode{
    public:
        trieNode *next[2];
        trieNode(){
            next[0]=NULL;
            next[1]=NULL;
        }
};
trieNode *buildTrie(vector<int> &a){
    trieNode *root=new trieNode();
    int n=a.size();
    for(int i=0;i<n;i++){
        int num=a[i];
//        trieNode *cur=new trieNode();
        trieNode *cur=root;
        for(int i=31;i>=0;i--){
            int bit=(num>>i) & 1;
            if(cur->next[bit]==NULL)
                cur->next[bit]=new trieNode();
            cur=cur->next[bit];
        }
    }
    return root;
};
int helper(trieNode *root,vector<int> &a){
    int res=0;
    for(int i=0;i<a.size();i++){
        int num=a[i];
        trieNode *it=root;
        int cur_max=0;
        for(int i=31;i>=0;i--){
            int bit=((num>>i) & 1)?0:1;
            if(it->next[bit]){
                cur_max<<=1;
                cur_max|=1;
                it=it->next[bit];
            } else{
                cur_max<<=1;
                cur_max|=0;
                it=it->next[bit^1];
            }
        }
        res=max(res,cur_max);
    }
    return res;
}
int32_t main(){
//    FAST_IO
    vector<int> a={3,10,5,15,2};
    trieNode *root=buildTrie(a);
    int ans=helper(root,a);
    cout<<ans<<endl;
    return 0;
}
