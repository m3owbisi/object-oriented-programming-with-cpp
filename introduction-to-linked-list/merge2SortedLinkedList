#include<iostream>
using namespace std;
class node {
    public:
    int data;
    node* next;
    node(int val) {
        data=val;
        next=NULL;
    }
};
void insertAtHead(node*& head,int val) {
    node* n = new node(val);
    n->next = head;
    head = n;
}

void insertAtTail(node*& head, int val) {
    node* n = new node(val);
    if (head == NULL) {
        head = n;
        return;
    }
    node* temp = head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = n;
}

node* merge(node*& head1, node*& head2) {
    node* ptr1 = head1;
    node* ptr2 = head2;
    node* dummyNode = new node(-1);
    node* ptr3 = dummyNode;
    while (ptr1 != NULL && ptr2 != NULL) {
        if (ptr1->data < ptr2->data) {
            ptr3->next = ptr1;
            ptr1 = ptr1->next;
        }
        else {
            ptr3->next = ptr2;
            ptr2 = ptr2->next;
        }
        ptr3 = ptr3->next;
    }
    while (ptr1 != NULL) {
        ptr3->next = ptr1;
        ptr1 = ptr1->next;
        ptr3 = ptr3->next;
    }
    while (ptr2 != NULL) {
        ptr3->next = ptr2;
        ptr2 = ptr2->next;
        ptr3 = ptr3->next;
    }
    return dummyNode->next;
}
node *mergeRecursive(node *&head1,node *&head2){
    if(head1==NULL){
        return head2;
    }
    if(head2==NULL){
        return head1;
    }
    node *result;
    if(head1->data<head2->data){
        result=head1;
        result->next=mergeRecursive(head1->next,head2);
    } else{
        result=head2;
        result->next=mergeRecursive(head1,head2->next);
    }
    return result;
}
void display(node* head) {
    node* temp = head;
    while (temp != NULL) {
        cout << temp->data << "->";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

int main() {
    node* head1 = NULL;
    node* head2 = NULL;
    int arr1[] = {1, 4, 5, 7};
    int arr2[] = {2, 3, 6};
    for (int i = 0; i < 4; i++) {
        insertAtTail(head1, arr1[i]);
    }
    for (int i = 0; i < 3; i++) {
        insertAtTail(head2, arr2[i]);
    }
    cout << "List 1: ";
    display(head1);
    cout << "List 2: ";
    display(head2);
    // node* newHead = merge(head1, head2);
    // cout << "Merged List: ";
    // display(newHead);
    node *new_Head=mergeRecursive(head1,head2);
    display(new_Head);
    return 0;
}
