#include<iostream>
#include<vector>
using namespace std;
struct node{
    int data;
    struct node *left;
    struct node *right;
    node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};
// optimised
node *LCA(node *root,int n2,int n1){
    if(root==NULL){
        return NULL;
    }
    if(root->data==n1 || root->data==n2){
        return root;
    }
    node *leftLCA=LCA(root->left,n2,n1);
    node *rightLCA=LCA(root->right,n2,n1);
    if(leftLCA && rightLCA){
        return root;
    }
    if(leftLCA!=NULL){
        return leftLCA;
    }
    return rightLCA;
}
int main(){
    struct node *root=new node(1);
    root->left=new node(2);
    root->right=new node(3);
    root->left->left=new node(4);
    root->right->left=new node(5);
    root->right->right=new node(6);
    root->right->left->left=new node(7);
    int n1=7;
    int n2=6;
    node *lca=LCA(root,n1,n2);
    if(lca==NULL){
        cout<<"LCA doesn't exist."<<endl;
    } else{
        cout<<"LCA does exist."<<endl;
        cout<<"LCA: "<<lca->data<<endl;
    }
    return 0;
}
