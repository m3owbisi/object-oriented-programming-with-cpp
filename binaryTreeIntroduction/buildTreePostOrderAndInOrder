#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    struct node *left;
    struct node *right;
    node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};
int search(int inOrder[],int start,int end,int val){
    for(int i=start;i<=end;i++){
        if(inOrder[i]==val){
            return i;
        }
    }
    return -1;
}
node *buildTree(int postOrder[],int inOrder[],int start,int end){
    static int idx=4;
    if(start>end){
        return NULL;
    }
    int val=postOrder[idx];
    idx--;
    node *curr=new node(val);
    if(start==end){
        return curr;
    }
    int pos=search(inOrder,start,end,val);
    curr->right=buildTree(postOrder,inOrder,pos+1,end);
    curr->left=buildTree(postOrder,inOrder,start,pos-1);
    return curr;
}
void inOrderPrint(node *root){
    if(root==NULL){
        return;
    }
    inOrderPrint(root->left);
    cout<<root->data<<"\t";
    inOrderPrint(root->right);
}
int main(){
    int postOrder[]={4,2,5,3,1};
    int inOrder[]={4,2,1,5,3};
    //build tree
    node *root=buildTree(postOrder,inOrder,0,4);
    inOrderPrint(root);
    cout<<"\n";
    return 0;
}
